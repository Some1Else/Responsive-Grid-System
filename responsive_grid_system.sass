// Responsive Grid System
// CC-BY http://some1else.github.com

////// Util //////

// Used to abbreviate public API's handling of *splats
=multi_extend($selector, $context: all, $c2: unset, $c3: unset, $c4: unset)
  @if $context == all
    @extend .#{$selector}
  @else
    @extend .#{$context}_#{$selector}
    @each $other_context in $c2, $c3, $c4
      @if $other_context != unset
        @extend .#{$other_context}_#{$selector}

////// Containers //////

// Warning, not IE6 safe
.contained
  margin:
    left: auto
    right: auto

// Generates container style for $context
=generate_container($context, $width)
  .#{$context}_container, .container
    @extend .contained
    width: $width

////// Positionin //////

// All grid columns are positioned
.positioned
  float: left
  display: -moz-inline-box
  -moz-box-orient: vertical
  display: inline-block
  vertical-align: middle
  *vertical-aign: auto
  *display: inline

// Makes all grid columns and rows floated
=positioned()
  @extend .positioned

////// Gutters //////

// Generates gutter style for $context
=generate_gutter($context, $gutter)
  .#{$context}_gutter, .gutter
    margin:
      left: $gutter/2
      right: $gutter/2
  .ungutter
    margin:
      left: 0
      right: 0

// Makes all grid columns guttered
=guttered($context)
  @extend .#{$context}_gutter

=unguttered
  @extend .ungutter

////// Columns //////

// Column width mixin
=column_width($n, $width, $columns, $gutter)
  $column: ($width / $columns) - $gutter
  width: ($column * $n) + ($gutter * ($n - 1))

// Row width mixin for $context
=row_width($n, $width, $columns, $gutter)
  $column: ($width / $columns) - $gutter
  width: ($column * $n) + ($gutter * $n)

////// Hidden Elements //////

.hidden
  display: none

// Generates hidden style for $context
=generate_hider($context)
  .#{$context}_hidden
    display: none

////// Clear fix //////

.cleared
  *zoom: 1
  &:before, &:after
    display: table
    content: ""
  &:after
    clear: both

=cleared()
  @extend .cleared

////// Grid //////

// Generates container, gutter, column and row styles for $context
=generate_grid($context, $width, $columns, $gutter)
  $column: ($width / $columns) - $gutter

  @for $n from 1 through $columns

    // Default column and column in context, works with overrides
    .col_#{$n}, .#{$context}_col_#{$n}
      +positioned
      +guttered($context)
      +column_width($n, $width, $columns, $gutter)

    // Default row and row in context
    .row_#{$n}, .#{$context}_row_#{$n}
      //+cleared
      +positioned
      +unguttered
      +row_width($n, $width, $columns, $gutter)

    // Prepend and append padding
    .prepend_#{$n}, .#{$context}_prepend_#{$n}
      padding-left: $n * $column + $gutter * $n
    .append_#{$n}, .#{$context}_append_#{$n}
      padding-right: $n * $column + $gutter * $n

    // Prefix and suffix margins
    .prefix_#{$n}, .#{$context}_prefix_#{$n}
      margin-left: $n * $column + $gutter * ($n - 1) + $gutter * 1.5
    .suffix_#{$n}, .#{$context}_suffix_#{$n}
      margin-right: $n * $column + $gutter * ($n - 1) + $gutter * 1.5

////// PUBLIC API //////

// TODO: Impossible to evaluate stuff next to @media in SASS
// Generates media selector and grid for $context
// =media($context: all, $query: "all", $width: 960, $columns: 12, $gutter: 20, $unit: px)
//   @media $query
//     +generate_grid($context, $width, $columns, $gutter, $unit)

// Syntactic sugar that trails @media query
=uses_grid($context: all, $width: 960px, $columns: 12, $gutter: 20px)
  +generate_container($context, $width)
  +generate_gutter($context, $gutter)
  +generate_grid($context, $width, $columns, $gutter)
  +generate_hider($context)


// Makes element a container in $context
=container($context: all)
  @if $context == all
    @extend .container
  @else
    @extend .#{$context}_container

// Makes element a row in $context
=row($size: 12, $context: all, $c2: unset, $c3: unset, $c4: unset)
  @if $context == all
    @extend .row_#{$size}
  @else
    @extend .#{$context}_row_#{$size}
  @if $c2 != unset
    @extend .#{$c2}_row_#{$size}
  @if $c3 != unset
    @extend .#{$c3}_row_#{$size}
  @if $c4 != unset
    @extend .#{$c4}_row_#{$size}

// Makes element a column in $context
=col($size: 12, $context: all, $c2: unset, $c3: unset, $c4: unset)
  @if $context == all
    @extend .col_#{$size}
  @else
    @extend .#{$context}_col_#{$size}
  @if $c2 != unset
    @extend .#{$c2}_col_#{$size}
  @if $c3 != unset
    @extend .#{$c3}_col_#{$size}
  @if $c4 != unset
    @extend .#{$c4}_col_#{$size}

// Makes elements padded
=prepend($size:11, $context: all, $c2: unset, $c3: unset, $c4: unset)
  @if $context == all
    @extend .prepend_#{$size}
  @else
    @extend .#{$context}_prepend_#{$size}
  @if $c2 != unset
    @extend .#{$c2}_prepend_#{$size}
  @if $c3 != unset
    @extend .#{$c3}_prepend_#{$size}
  @if $c4 != unset
    @extend .#{$c4}_prepend_#{$size}
=append($size:11, $context: all, $c2: unset, $c3: unset, $c4: unset)
  @if $context == all
    @extend .append_#{$size}
  @else
    @extend .#{$context}_append_#{$size}
  @if $c2 != unset
    @extend .#{$c2}_append_#{$size}
  @if $c3 != unset
    @extend .#{$c3}_append_#{$size}
  @if $c4 != unset
    @extend .#{$c4}_append_#{$size}
// Makes elements marginal
=prefix($size:11, $context: all, $c2: unset, $c3: unset, $c4: unset)
  @if $context == all
    @extend .prefix_#{$size}
  @else
    @extend .#{$context}_prefix_#{$size}
  @if $c2 != unset
    @extend .#{$c2}_prefix_#{$size}
  @if $c3 != unset
    @extend .#{$c3}_prefix_#{$size}
  @if $c4 != unset
    @extend .#{$c4}_prefix_#{$size}
=suffix($size:11, $context: all, $c2: unset, $c3: unset, $c4: unset)
  @if $context == all
    @extend .suffix_#{$size}
  @else
    @extend .#{$context}_suffix_#{$size}
  @if $c2 != unset
    @extend .#{$c2}_suffix_#{$size}
  @if $c3 != unset
    @extend .#{$c3}_suffix_#{$size}
  @if $c4 != unset
    @extend .#{$c4}_suffix_#{$size}

// Hides an element in $context
=hide($context: all, $c2: unset, $c3: unset, $c4: unset)
  @extend .#{$context}_hidden
  @if $c2 != unset
    @extend .#{$c2}_hidden
  @if $c3 != unset
    @extend .#{$c3}_hidden
  @if $c4 != unset
    @extend .#{$c4}_hidden
